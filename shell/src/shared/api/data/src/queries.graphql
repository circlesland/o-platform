query init {
  init {
    isLoggedOn
    hasProfile
    profileId
    # lastAcknowledgedAt
    capabilities {
      type
    }
    useShortSignup
    profile {
      id
      circlesAddress
      displayCurrency
      confirmedLegalAge
      circlesSafeOwner
      invitationLink
      successorOfCirclesAddress
      displayName
      firstName
      lastName
      emailAddress
      askedForEmailAddress
      dream
      country
      avatarUrl
      avatarCid
      avatarMimeType
      newsletter
      displayTimeCircles
      displayCurrency
      cityGeonameid
      provenUniqueness
      shippingAddresses {
        id
        name
        street
        house
        zip
        city
        state
        country
        notificationEmail
      }
      shops {
        id
      }
      city {
        geonameid
        name
        country
      }
      shippingAddresses {
        id
        name
        street
        house
        city
        cityGeonameid
        zip
        state
        country
        notificationEmail
      }
      memberships {
        isAdmin
        organisation {
          id
          circlesAddress
          displayCurrency
          displayName
          circlesSafeOwner
          name
          description
          avatarUrl
          cityGeonameid
          city {
            geonameid
            country
            name
            population
          }
        }
      }
      verifications {
        createdAt
        revokedAt
        verifierSafeAddress
        verifierProfile {
          id
          circlesAddress
          displayCurrency
          avatarUrl
          name
          city {
            geonameid
            name
            country
          }
        }
      }
      # init.invitation
      claimedInvitation {
        claimedAt
      }
      # init.eoaInvitationTransaction
      invitationTransaction {
        timestamp
        transaction_hash
      }
      # init.ubi
      circlesTokenAddress
    }
  }
}

query deliveryMethods {
  deliveryMethods {
    id
    name
  }
}
query lastAcknowledgedAt($safeAddress: String!) {
  lastAcknowledgedAt(safeAddress: $safeAddress)
}

query sessionInfo {
  sessionInfo {
    isLoggedOn
    hasProfile
    profileId
    # lastAcknowledgedAt
    capabilities {
      type
    }
    useShortSignup
  }
}

query claimedInvitation {
  claimedInvitation {
    createdAt
    createdByProfileId
    claimedAt
    claimedByProfileId
  }
}

query invitationTransaction {
  invitationTransaction {
    transaction_hash
  }
}

query hubSignupTransaction {
  hubSignupTransaction {
    transaction_hash
    payload {
      ... on CrcSignup {
        token
      }
    }
  }
}

query safeInfo {
  safeInfo {
    lastUbiAt
    safeAddress
    tokenAddress
    randomValue
  }
}

query stats {
  stats {
    profilesCount
    verificationsCount
    goals {
      lastGoal
      currentValue
      nextGoal
    }
    myRank {
      rank
      redeemedInvitationsCount
    }
    leaderboard {
      createdByCirclesAddress
      inviteCount
      createdByProfile {
        id
        circlesAddress
        displayCurrency
        circlesSafeOwner
        displayName
        firstName
        lastName
        dream
        avatarUrl
        cityGeonameid
        provenUniqueness
        city {
          geonameid
          name
          country
          latitude
          longitude
          population
        }
      }
    }
  }
}

query findSafesByOwner($owner: String!) {
  findSafesByOwner(owner: $owner) {
    type
    safeAddress
    lastUbiAt
    randomValue
    tokenAddress
    safeProfile {
      id
      circlesAddress
      displayCurrency
      circlesSafeOwner
      displayName
      firstName
      lastName
      dream
      avatarUrl
      cityGeonameid
      provenUniqueness
      city {
        geonameid
        name
        country
        latitude
        longitude
        population
      }
    }
  }
}

query myInvitations {
  myInvitations {
    createdAt
    claimedAt
    claimedBy {
      circlesAddress
      displayCurrency
      circlesSafeOwner
      displayName
      firstName
      lastName
      avatarUrl
    }
    name
    address
    balance
    code
  }
}

query myProfile {
  myProfile {
    id
    circlesAddress
    displayCurrency
    circlesSafeOwner
    invitationLink
    successorOfCirclesAddress
    displayName
    firstName
    lastName
    emailAddress
    askedForEmailAddress
    dream
    country
    avatarUrl
    avatarCid
    avatarMimeType
    newsletter
    displayTimeCircles
    displayCurrency
    cityGeonameid
    provenUniqueness
    shops {
      id
    }
    city {
      geonameid
      name
      country
      latitude
      longitude
      population
    }
    shippingAddresses {
      id
      name
      street
      house
      zip
      city
      state
      country
      notificationEmail
    }
    memberships {
      isAdmin
      organisation {
        id
        circlesAddress
        displayCurrency
        displayName
        circlesSafeOwner
        name
        description
        avatarUrl
        cityGeonameid
        shops {
          id
        }
        city {
          geonameid
          country
          name
          population
        }
      }
    }
    verifications {
      createdAt
      revokedAt
      verifierSafeAddress
      verifierProfile {
        id
        circlesAddress
        displayCurrency
        avatarUrl
        name
        city {
          geonameid
          name
          country
        }
      }
    }
  }
}

query profiles($id: [Int!]!) {
  profilesById(ids: $id) {
    id
    circlesAddress
    displayCurrency
    circlesSafeOwner
    successorOfCirclesAddress
    displayName
    firstName
    lastName
    dream
    avatarUrl
    displayCurrency
    provenUniqueness
    city {
      geonameid
      name
      country
    }
    shippingAddresses {
      id
      name
      street
      house
      zip
      city
      state
      country
      notificationEmail
    }
    memberships {
      isAdmin
      organisation {
        id
        circlesAddress
        displayCurrency
        displayName
        circlesSafeOwner
        name
        description
        avatarUrl
        cityGeonameid
        city {
          geonameid
          country
          name
          population
        }
      }
    }
    verifications {
      createdAt
      revokedAt
      verifierSafeAddress
      verifierProfile {
        id
        circlesAddress
        displayCurrency
        avatarUrl
        name
        displayName
        city {
          geonameid
          name
          country
        }
      }
    }
  }
}

query citiesByName($name: String!, $languageCode: String) {
  cities(query: { byName: { name_like: $name, languageCode: $languageCode } }) {
    geonameid
    name
    country
    population
    latitude
    longitude
    feature_code
  }
}

query citiesById($ids: [Int!]!) {
  cities(query: { byId: { geonameid: $ids } }) {
    geonameid
    name
    country
    population
    latitude
    longitude
    feature_code
  }
}

query profilesByName($searchString: String!) {
  search(query: { searchString: $searchString }) {
    id
    origin
    circlesSafeOwner
    circlesAddress
    displayCurrency
    successorOfCirclesAddress
    avatarUrl
    displayName
    firstName
    lastName
    dream
    country
    displayCurrency
    provenUniqueness
    city {
      geonameid
      name
      country
    }
    shippingAddresses {
      id
      name
      street
      house
      zip
      city
      state
      country
      notificationEmail
    }
    verifications {
      createdAt
      revokedAt
      verifierSafeAddress
      verifierProfile {
        id
        circlesAddress
        displayCurrency
        avatarUrl
        name
        displayName
        city {
          geonameid
          name
          country
        }
      }
    }
  }
}

query getRecentProfiles($pagination: PaginationArgs) {
  recentProfiles(pagination: $pagination) {
    id
    circlesAddress
    displayCurrency
    origin
    successorOfCirclesAddress
    displayName
    firstName
    lastName
    dream
    country
    avatarUrl
    provenUniqueness
    city {
      geonameid
      name
      country
    }
    verifications {
      createdAt
      revokedAt
      verifierSafeAddress
      verifierProfile {
        id
        circlesAddress
        displayCurrency
        avatarUrl
        name
        displayName
        city {
          geonameid
          name
          country
        }
      }
    }
  }
}

query profilesByCirclesAddress($circlesAddresses: [String!]!) {
  profilesBySafeAddress(safeAddresses: $circlesAddresses) {
    id
    circlesAddress
    displayCurrency
    origin
    successorOfCirclesAddress
    displayName
    firstName
    lastName
    dream
    avatarUrl
    provenUniqueness
    city {
      geonameid
      name
      country
    }
    shippingAddresses {
      id
      name
      street
      house
      zip
      city
      state
      country
      notificationEmail
    }
    memberships {
      isAdmin
      organisation {
        id
        circlesAddress
        displayCurrency
        displayName
        circlesSafeOwner
        name
        description
        avatarUrl
        cityGeonameid
        city {
          geonameid
          country
          name
          population
        }
      }
    }
    verifications {
      createdAt
      revokedAt
      verifierSafeAddress
      verifierProfile {
        id
        circlesAddress
        displayCurrency
        avatarUrl
        name
        displayName
        city {
          geonameid
          name
          country
        }
      }
    }
  }
}

query profilesByIds($id: [Int!]!) {
  profilesById(ids: $id) {
    id
    circlesAddress
    displayCurrency
    origin
    successorOfCirclesAddress
    displayName
    firstName
    lastName
    dream
    avatarUrl
    provenUniqueness
    city {
      geonameid
      name
      country
    }
    shippingAddresses {
      id
      name
      street
      house
      zip
      city
      state
      country
      notificationEmail
    }
    verifications {
      createdAt
      revokedAt
      verifierSafeAddress
      verifierProfile {
        id
        circlesAddress
        displayCurrency
        avatarUrl
        name
        displayName
        city {
          geonameid
          name
          country
        }
      }
    }
  }
}

query trustRelations($safeAddress: String!) {
  trustRelations(safeAddress: $safeAddress) {
    safeAddress
    safeAddressProfile {
      id
      displayName
      firstName
      lastName
      origin
      avatarUrl
      successorOfCirclesAddress
      circlesAddress
      displayCurrency
      provenUniqueness
    }
    direction
    otherSafeAddress
    otherSafeAddressProfile {
      id
      displayName
      firstName
      lastName
      avatarUrl
      successorOfCirclesAddress
      circlesAddress
      displayCurrency
      provenUniqueness
      verifications {
        createdAt
        revokedAt
        verifierSafeAddress
        verifierProfile {
          id
          circlesAddress
          displayCurrency
          avatarUrl
          name
          city {
            geonameid
            name
            country
          }
        }
      }
    }
  }
}

query profileById($id: Int!) {
  profilesById(ids: [$id]) {
    id
    successorOfCirclesAddress
    circlesSafeOwner
    circlesAddress
    displayCurrency
    avatarUrl
    displayName
    firstName
    lastName
    dream
    city {
      geonameid
      country
      name
    }
    shippingAddresses {
      id
      name
      street
      house
      zip
      city
      state
      country
      notificationEmail
    }
    provenUniqueness
    verifications {
      createdAt
      revokedAt
      verifierSafeAddress
      verifierProfile {
        id
        circlesAddress
        displayCurrency
        avatarUrl
        name
        displayName
        city {
          geonameid
          name
          country
        }
      }
    }
  }
}

query profileBySafeAddress($safeAddress: String!) {
  profilesBySafeAddress(safeAddresses: [$safeAddress]) {
    id
    circlesAddress
    displayCurrency
    circlesSafeOwner
    invitationLink
    successorOfCirclesAddress
    displayName
    firstName
    lastName
    emailAddress
    askedForEmailAddress
    dream
    country
    avatarUrl
    avatarCid
    avatarMimeType
    newsletter
    displayTimeCircles
    displayCurrency
    cityGeonameid
    provenUniqueness
    shippingAddresses {
      id
      name
      street
      house
      zip
      city
      state
      country
      notificationEmail
    }
    shops {
      id
    }
    city {
      geonameid
      name
      country
    }
    shippingAddresses {
      id
      name
      street
      house
      city
      cityGeonameid
      zip
      state
      country
      notificationEmail
    }
    memberships {
      isAdmin
      organisation {
        id
        circlesAddress
        displayCurrency
        displayName
        circlesSafeOwner
        name
        description
        avatarUrl
        cityGeonameid
        city {
          geonameid
          country
          name
          population
        }
      }
    }
    verifications {
      createdAt
      revokedAt
      verifierSafeAddress
      verifierProfile {
        id
        circlesAddress
        displayCurrency
        avatarUrl
        name
        city {
          geonameid
          name
          country
        }
      }
    }
    # init.invitation
    claimedInvitation {
      claimedAt
    }
    # init.eoaInvitationTransaction
    invitationTransaction {
      timestamp
      transaction_hash
    }
    # init.ubi
    circlesTokenAddress
  }
}

query tags($typeId_in: [String!]!, $value_like: String) {
  tags(query: { typeId_in: $typeId_in, value_like: $value_like }) {
    typeId
    id
    value
    order
  }
}

query citiesByName($name: String!, $languageCode: String) {
  cities(query: { byName: { name_like: $name, languageCode: $languageCode } }) {
    geonameid
    name
    country
    population
    latitude
    longitude
    feature_code
  }
}

query citiesById($ids: [Int!]!) {
  cities(query: { byId: { geonameid: $ids } }) {
    geonameid
    name
    country
    population
    latitude
    longitude
    feature_code
  }
}

query organisations($pagination: PaginationArgs) {
  organisations(pagination: $pagination) {
    id
    circlesAddress
    displayCurrency
    createdAt
    name
    avatarUrl
    city {
      geonameid
      name
      country
    }
    shops {
      id
      name
      description
      legalText
      largeBannerUrl
      smallBannerUrl
    }
  }
}

query regions {
  regions {
    id
    circlesAddress
    displayCurrency
    createdAt
    name
    avatarUrl
    city {
      geonameid
      name
      country
    }
  }
}

query organisationsByAddress($addresses: [String!]!) {
  organisationsByAddress(addresses: $addresses) {
    id
    circlesAddress
    displayCurrency
    createdAt
    name
    avatarUrl
    displayName
    city {
      geonameid
      name
      country
    }
    shops {
      id
      name
      description
      legalText
      smallBannerUrl
      largeBannerUrl
    }
    members {
      ... on Organisation {
        id
        circlesAddress
        displayCurrency
        createdAt
        name
        displayName
        avatarUrl
        city {
          geonameid
          name
          country
        }
      }
      ... on Profile {
        id
        successorOfCirclesAddress
        circlesSafeOwner
        circlesAddress
        displayCurrency
        avatarUrl
        displayName
        firstName
        lastName
        dream
        provenUniqueness
        city {
          geonameid
          country
          name
        }
        shippingAddresses {
          id
          name
          street
          house
          zip
          city
          state
          country
          notificationEmail
        }
        verifications {
          createdAt
          revokedAt
          verifierSafeAddress
          verifierProfile {
            id
            circlesAddress
            displayCurrency
            avatarUrl
            name
            city {
              geonameid
              name
              country
            }
          }
        }
      }
    }
  }
}

query commonTrust($safeAddress1: String!, $safeAddress2: String!) {
  commonTrust(safeAddress1: $safeAddress1, safeAddress2: $safeAddress2) {
    type
    safeAddress1
    safeAddress2
    profile {
      id
      displayName
      firstName
      lastName
      avatarUrl
      successorOfCirclesAddress
      circlesAddress
      displayCurrency
      provenUniqueness
    }
  }
}

query tagById($id: Int!) {
  tagById(id: $id) {
    id
    typeId
    value
  }
}

query citiesByName($name: String!, $languageCode: String) {
  cities(query: { byName: { name_like: $name, languageCode: $languageCode } }) {
    geonameid
    name
    country
    population
    latitude
    longitude
    feature_code
  }
}

query citiesById($ids: [Int!]!) {
  cities(query: { byId: { geonameid: $ids } }) {
    geonameid
    name
    country
    population
    latitude
    longitude
    feature_code
  }
}

query stream($types: [EventType!]!, $safeAddress: String!, $pagination: PaginationArgs!, $filter: ProfileEventFilter) {
  events(types: $types, safeAddress: $safeAddress, pagination: $pagination, filter: $filter) {
    timestamp
    transaction_hash
    block_number
    safe_address
    contact_address
    contact_address_profile {
      type
      successorOfCirclesAddress
      circlesAddress
      displayCurrency
      displayName
      firstName
      lastName
      avatarUrl
      provenUniqueness
    }
    direction
    type
    payload {
      ... on CrcHubTransfer {
        transaction_hash
        from
        from_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        to
        to_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        flow
        transfers {
          token
          from
          from_profile {
            id
            displayName
            firstName
            lastName
            avatarUrl
            circlesAddress
            displayCurrency
            provenUniqueness
          }
          to
          to_profile {
            id
            displayName
            firstName
            lastName
            avatarUrl
            circlesAddress
            displayCurrency
            provenUniqueness
          }
          value
        }
        tags {
          id
          typeId
          value
        }
      }
      ... on CrcTrust {
        transaction_hash
        address
        can_send_to
        can_send_to_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        limit
      }
      ... on CrcSignup {
        transaction_hash
        user
        token
      }
      ... on CrcMinting {
        transaction_hash
        token
        from
        from_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        to
        to_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        value
      }
      ... on EthTransfer {
        transaction_hash
        from
        to
        value
      }
      ... on Erc20Transfer {
        transaction_hash
        from
        from_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        to
        to_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        value
      }
      ... on GnosisSafeEthTransfer {
        transaction_hash
        initiator
        from
        to
        value
      }
      ... on ChatMessage {
        id
        from
        from_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        to
        to_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        text
      }
      ... on MembershipOffer {
        createdBy
        createdBy_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        organisation
        organisation_profile {
          name
          avatarUrl
          circlesAddress
          displayCurrency
        }
        isAdmin
      }
      ... on MembershipAccepted {
        createdBy
        member
        member_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        organisation
        organisation_profile {
          name
          avatarUrl
          circlesAddress
          displayCurrency
        }
      }
      ... on MembershipRejected {
        member
        member_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        organisation
        organisation_profile {
          name
          avatarUrl
          circlesAddress
          displayCurrency
        }
      }
      ... on WelcomeMessage {
        invitedBy
        invitedBy_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
      }
      ... on InvitationCreated {
        name
        code
      }
      ... on InvitationRedeemed {
        name
        code
        redeemedBy
        redeemedBy_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
      }
      ... on SaleEvent {
        buyer
        buyer_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        invoice {
          id
          buyerSignature
          buyerSignedDate
          sellerSignature
          sellerSignedDate
          deliveryMethod {
            id
            name
          }
          deliveryAddress {
            name
            id
            street
            house
            zip
            city
            state
            country
            cityGeonameid
            notificationEmail
          }
          createdAt
          cancelledAt
          cancelReason
          simplePickupCode
          paymentTransactionHash
          simplePickupCode
          lines {
            amount
            metadata
            shop {
              id
              name
              description
              legalText
              smallBannerUrl
              largeBannerUrl
              openingHours
              private
              enabled
              productListingStyle
              shopListingStyle
              purchaseMetaDataKeys
              tosLink
              privacyPolicyLink
              healthInfosLink
              adultOnly
              ownerId
              owner {
                id
                name
                avatarUrl
                circlesAddress
              }
              deliveryMethods {
                id
                name
              }
            }
            offer {
              id
              title
              pictureUrl
              pricePerUnit
              minAge
              currentInventory
              tags {
                typeId
                value
              }
            }
          }
        }
      }
      ... on Purchased {
        seller_profile {
          id
          displayName
          firstName
          lastName
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
        purchase {
          id
          createdAt
          createdByAddress
          total
          deliveryMethod {
            id
            name
          }
          deliveryAddress {
            name
            id
            street
            house
            zip
            city
            state
            country
            cityGeonameid
            notificationEmail
          }
          lines {
            id
            amount
            metadata
            shop {
              id
              name
              description
              legalText
              smallBannerUrl
              largeBannerUrl
              openingHours
              private
              enabled
              productListingStyle
              shopListingStyle
              purchaseMetaDataKeys
              tosLink
              privacyPolicyLink
              healthInfosLink
              adultOnly
              ownerId
              pickupAddress {
                name
                street
                house
                zip
                city
                state
                country
              }
              owner {
                id
                name
                avatarUrl
                circlesAddress
              }
              deliveryMethods {
                id
                name
              }
            }
            offer {
              id
              pictureUrl
              title
              description
              pricePerUnit
              minAge
              tags {
                typeId
                value
              }
            }
          }
          invoices {
            id
            pickupCode
            deliveryMethod {
              id
              name
            }
            simplePickupCode
            buyerProfile {
              id
              displayName
              firstName
              lastName
              avatarUrl
              circlesAddress
              displayCurrency
              provenUniqueness
            }
            sellerProfile {
              id
              displayName
              firstName
              lastName
              avatarUrl
              circlesAddress
              displayCurrency
              provenUniqueness
            }
            paymentTransactionHash
            createdAt
            cancelledAt
            invoiceNo
            sellerSignature
            buyerSignature
          }
        }
      }
      ... on OrganisationCreated {
        organisation
        organisation_profile {
          name
          avatarUrl
          circlesAddress
          displayCurrency
          displayCurrency
        }
      }
      ... on MemberAdded {
        createdBy
        isAdmin
        member
        organisation
        organisation_profile {
          name
          avatarUrl
          circlesAddress
          displayCurrency
          displayCurrency
        }
      }
      ... on SafeVerified {
        safe_address
        organisation_profile {
          name
          avatarUrl
          circlesAddress
          displayCurrency
          displayCurrency
        }
      }
      ... on NewUser {
        profile {
          id
          displayName
          firstName
          lastName
          dream
          avatarUrl
          circlesAddress
          displayCurrency
          provenUniqueness
        }
      }
    }
  }
}

query aggregates($types: [AggregateType!]!, $safeAddress: String!, $filter: ProfileAggregateFilter) {
  aggregates(types: $types, safeAddress: $safeAddress, filter: $filter) {
    type
    safe_address
    safe_address_profile {
      id
      displayName
      firstName
      lastName
      avatarUrl
      circlesAddress
      displayCurrency
      provenUniqueness
    }
    payload {
      ... on Offers {
        lastUpdatedAt
        offers {
          id
          version
          createdByProfile {
            id
            displayName
            firstName
            lastName
            avatarUrl
            circlesAddress
            displayCurrency
            smallBannerUrl
            provenUniqueness
          }
          tags {
            typeId
            value
            order
          }
          createdByAddress
          createdAt
          title
          minAge
          pictureUrl
          pictureMimeType
          description
          pricePerUnit
          timeCirclesPriceShare
        }
      }
      ... on Erc721Tokens {
        lastUpdatedAt
        balances {
          token_no
          token_symbol
          token_name
          token_address
          token_owner_profile {
            id
            circlesAddress
            displayName
            avatarUrl
            firstName
            lastName
            provenUniqueness
          }
          token_no
          token_url
        }
      }
      ... on CrcBalances {
        lastUpdatedAt
        balances {
          token_address
          token_owner_address
          token_owner_profile {
            id
            displayName
            firstName
            lastName
            avatarUrl
            circlesAddress
            displayCurrency
            provenUniqueness
          }
          token_balance
        }
      }
      ... on Erc20Balances {
        lastUpdatedAt
        balances {
          token_address
          token_owner_address
          token_owner_profile {
            id
            displayName
            firstName
            lastName
            avatarUrl
            circlesAddress
            displayCurrency
            provenUniqueness
          }
          token_balance
        }
      }
      ... on Contacts {
        lastUpdatedAt
        contacts {
          metadata {
            name
            directions
            values
            timestamps
          }
          lastContactAt
          contactAddress
          contactAddress_Profile {
            type
            id
            displayName
            firstName
            lastName
            avatarUrl
            circlesAddress
            displayCurrency
            provenUniqueness
            city {
              geonameid
              name
              country
            }
            memberships {
              isAdmin
              organisation {
                id
                circlesAddress
                displayCurrency
                displayName
                circlesSafeOwner
                name
                description
                avatarUrl
                cityGeonameid
                city {
                  geonameid
                  country
                  name
                  population
                }
              }
            }
            members {
              type
              id
              displayName
              firstName
              lastName
              avatarUrl
              circlesAddress
              displayCurrency
              city {
                geonameid
                name
                country
              }
            }
            verifications {
              createdAt
              revokedAt
              verifierSafeAddress
              verifierProfile {
                id
                circlesAddress
                displayCurrency
                avatarUrl
                name
                city {
                  geonameid
                  name
                  country
                }
              }
            }
          }
        }
      }
      ... on Members {
        lastUpdatedAt
        members {
          ... on Profile {
            successorOfCirclesAddress
            circlesAddress
            displayCurrency
            provenUniqueness
          }
          ... on Organisation {
            circlesAddress
            displayCurrency
          }
        }
      }
      ... on Memberships {
        lastUpdatedAt
        organisations {
          id
          circlesAddress
          displayCurrency
          displayName
          circlesSafeOwner
          name
          description
          avatarUrl
          cityGeonameid
          city {
            geonameid
            country
            name
            population
          }
        }
      }
      ... on Purchases {
        lastUpdatedAt
        purchases {
          id
          createdAt
          createdByAddress
          createdByProfile {
            id
            displayName
            firstName
            lastName
            avatarUrl
            circlesAddress
            displayCurrency
            provenUniqueness
          }
          deliveryMethod {
            id
            name
          }
          total
          lines {
            id
            amount
            metadata
            shop {
              id
              name
              description
              legalText
              smallBannerUrl
              largeBannerUrl
              openingHours
              private
              enabled
              productListingStyle
              shopListingStyle
              purchaseMetaDataKeys
              tosLink
              privacyPolicyLink
              healthInfosLink
              adultOnly
              ownerId
              owner {
                id
                name
                avatarUrl
                circlesAddress
              }
              deliveryMethods {
                id
                name
              }
            }
            offer {
              id
              version
              title
              description
              pictureUrl
              pricePerUnit
              minAge
              timeCirclesPriceShare
              createdByProfile {
                id
                displayName
                firstName
                lastName
                avatarUrl
                circlesAddress
                displayCurrency
                provenUniqueness
              }
              tags {
                typeId
                value
              }
            }
          }
          invoices {
            id
            sellerAddress
            paymentTransactionHash
            buyerAddress
            pickupCode
            deliveryMethod {
              id
              name
            }
            simplePickupCode
            buyerSignature
            buyerSignedDate
            sellerSignature
            sellerSignedDate
            createdAt
            cancelledAt
            cancelReason
            sellerProfile {
              id
              displayName
              firstName
              lastName
              avatarUrl
              circlesAddress
              displayCurrency
              provenUniqueness
            }
          }
        }
      }
      ... on Sales {
        lastUpdatedAt
        sales {
          id
          createdAt
          sellerProfile {
            id
            displayName
            firstName
            lastName
            avatarUrl
            circlesAddress
            displayCurrency
            provenUniqueness
          }
          buyerProfile {
            id
            displayName
            firstName
            lastName
            avatarUrl
            circlesAddress
            displayCurrency
            verifications {
              createdAt
              revokedAt
              verifierSafeAddress
              verifierProfile {
                id
                circlesAddress
                displayCurrency
                avatarUrl
                name
                city {
                  geonameid
                  name
                  country
                }
              }
            }
          }
          total
          lines {
            id
            amount
            metadata
            shop {
              id
              name
              description
              legalText
              smallBannerUrl
              largeBannerUrl
              openingHours
              private
              enabled
              productListingStyle
              shopListingStyle
              purchaseMetaDataKeys
              tosLink
              privacyPolicyLink
              healthInfosLink
              adultOnly
              ownerId
              owner {
                id
                name
                avatarUrl
                circlesAddress
              }
              deliveryMethods {
                id
                name
              }
            }
            offer {
              id
              version
              title
              description
              pictureUrl
              pricePerUnit
              minAge
              timeCirclesPriceShare
              createdByProfile {
                id
                displayName
                firstName
                lastName
                avatarUrl
                circlesAddress
                displayCurrency
                provenUniqueness
              }
              tags {
                typeId
                value
              }
            }
          }
          invoices {
            id
            sellerAddress
            paymentTransactionHash
            buyerAddress
            pickupCode
            deliveryMethod {
              id
              name
            }
            deliveryAddress {
              name
              id
              street
              house
              zip
              city
              state
              country
              cityGeonameid
              notificationEmail
            }
            simplePickupCode
            buyerSignature
            buyerSignedDate
            sellerSignature
            sellerSignedDate
            createdAt
            cancelledAt
            cancelReason
            buyerProfile {
              id
              displayName
              firstName
              lastName
              avatarUrl
              circlesAddress
              displayCurrency
              provenUniqueness
              verifications {
                createdAt
                revokedAt
                verifierSafeAddress
                verifierProfile {
                  id
                  circlesAddress
                  displayCurrency
                  avatarUrl
                  name
                  city {
                    geonameid
                    name
                    country
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}





query getAllStringsByMaxVersion {
  getAllStringsByMaxVersion {
    lang
    key
    createdBy
    version
    value
  }
}

query getAllStringsByMaxVersionAndLang($lang: String) {
  getAllStringsByMaxVersionAndLang(lang: $lang) {
    lang
    key
    createdBy
    version
    value
    needsUpdate
  }
}

query getStringsToBeUpdatedAmount($lang: String, $key: String) {
  getStringsToBeUpdatedAmount(lang: $lang, key: $key)
}

query getStringByMaxVersion($lang: String, $key: String) {
  getStringByMaxVersion(lang: $lang, key: $key) {
    lang
    key
    createdBy
    version
    value
  }
}

query getOlderVersionsByKeyAndLang($key: String, $lang: String) {
  getOlderVersionsByKeyAndLang(lang: $lang, key: $key) {
    lang
    key
    createdBy
    version
    value
  }
}



query getPaginatedStrings($pagination_key: String, $key: String, $lang: String, $value: String) {
  getPaginatedStrings(pagination_key: $pagination_key, key: $key, lang: $lang, value: $value) {
    lang
    key
    createdBy
    version
    value
    pagination_key
  }
}

query getPaginatedStringsToUpdate($pagination_key: String, $key: String, $lang: String, $value: String) {
  getPaginatedStringsToUpdate(pagination_key: $pagination_key, key: $key, lang: $lang, value: $value) {
    lang
    key
    createdBy
    version
    value
    pagination_key
  }
}

query getAvailableLanguages {
  getAvailableLanguages {
    lang
  }
}

query directPath($from: String!, $to: String!, $amount: String!) {
  directPath(from: $from, to: $to, amount: $amount) {
    flow
    transfers {
      from
      to
      token
      tokenOwner
      value
    }
  }
}

query invoice($invoiceId: Int!) {
  invoice(invoiceId: $invoiceId)
}

query verifications($pagination: PaginationArgs, $filter: VerifiedSafesFilter) {
  verifications(pagination: $pagination, filter: $filter) {
    createdAt
    revokedAt
    verifierSafeAddress
    verifierProfile {
      id
      circlesAddress
      displayCurrency
      avatarUrl
      name
      city {
        geonameid
        name
        country
      }
    }
    verifiedSafeAddress
    verifiedProfile {
      id
      displayName
      firstName
      lastName
      avatarUrl
      circlesAddress
      displayCurrency
      provenUniqueness
    }
  }
}

query findInvitationCreator($code: String!) {
  findInvitationCreator(code: $code) {
    circlesAddress
    displayCurrency
    displayName
    firstName
    lastName
    avatarUrl
  }
}

query shop($id: Int!) {
  shop(id: $id) {
    id
    name
    description
    legalText
    smallBannerUrl
    largeBannerUrl
    openingHours
    private
    enabled
    productListingStyle
    shopListingStyle
    purchaseMetaDataKeys
    tosLink
    privacyPolicyLink
    healthInfosLink
    adultOnly
    ownerId
    owner {
      id
      name
      avatarUrl
      circlesAddress
    }
    deliveryMethods {
      id
      name
    }
    pickupAddress {
      name
      street
      house
      zip
      city
      state
      country
    }
    categories {
      id
      name
      description
      sortOrder
      shopId
      smallBannerUrl
      largeBannerUrl
      private
      enabled
      createdAt
      productListingStyle
      entries {
        id
        sortOrder
        private
        productId
        productVersion
        shopCategoryId
        enabled

        product {
          id
          version
          title
          description
          pictureUrl
          pricePerUnit
          minAge
          currentInventory
          createdByProfile {
            id
            displayName
            avatarUrl
            circlesAddress
            provenUniqueness
          }
        }
      }
    }
  }
}

query shops($ownerId: Int) {
  shops(ownerId: $ownerId) {
    id
    createdAt
    name
    description
    legalText
    smallBannerUrl
    largeBannerUrl
    openingHours
    private
    enabled
    shopListingStyle
    productListingStyle
    sortOrder
    ownerId
    adultOnly
    tosLink
    privacyPolicyLink
    healthInfosLink
    deliveryMethods {
      id
      name
    }
    owner {
      id
      name
      avatarUrl
      circlesAddress
    }
    pickupAddress {
      name
      street
      house
      zip
      city
      state
      country
    }
  }
}

query shopsById($ids: [Int!]!) {
  shopsById(ids: $ids) {
    id
    createdAt
    name
    description
    legalText
    smallBannerUrl
    largeBannerUrl
    openingHours
    private
    enabled
    shopListingStyle
    productListingStyle
    sortOrder
    ownerId
    tosLink
    adultOnly
    privacyPolicyLink
    healthInfosLink
    deliveryMethods {
      id
      name
    }
    owner {
      id
      name
      avatarUrl
      circlesAddress
    }
    pickupAddress {
      name
      street
      house
      zip
      city
      state
      country
    }
  }
}

query clientAssertionJwt {
  clientAssertionJwt
}

query offersByIdAndVersion($query: [OfferByIdAndVersionInput!]!) {
  offersByIdAndVersion(query: $query) {
    id
    title
    pictureUrl
    pricePerUnit
    currentInventory
    version
    tags {
      typeId
      value
    }
  }
}
